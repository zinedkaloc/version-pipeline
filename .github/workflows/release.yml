name: Create Release and Update Changelog
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install Dependencies
        run: npm ci

      - name: Check if there is a change
        run: |
          result=$(git diff --name-only origin/release..HEAD | wc -l)
          if [ "$result" -eq "0" ]; then
            echo "No changes to process."
            exit 0
          fi

      - name: Generate changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update changelog
        run: |
          echo "CHANGELOG:\n${{ steps.changelog.outputs.changelog }}" >> CHANGELOG.md
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Update CHANGELOG.md [skip ci]"

      - name: Debug changelog output
        run: echo "${{ steps.changelog.outputs.changelog }}"

      - name: Update version
        id: version
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          npm version patch --no-git-tag-version
          git add package.json
          echo "::set-output name=version::$(cat package.json | jq -r '.version')"
          git commit -m "chore(release): $(cat package.json | jq -r '.version') [skip ci]"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Create tag
        run: git tag v${{ steps.version.outputs.version }}

      - name: Push tag
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body: |
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
